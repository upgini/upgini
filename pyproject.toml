[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "upgini"
dynamic = ["version"]
description = "Intelligent data search & enrichment for Machine Learning"
readme = "README.md"
requires-python = ">=3.8,<3.11"
authors = [
    { name = "Upgini Developers", email = "madewithlove@upgini.com" },
]
keywords = [
    "automl",
    "data mining",
    "data science",
    "data search",
    "machine learning",
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Customer Service",
    "Intended Audience :: Developers",
    "Intended Audience :: Financial and Insurance Industry",
    "Intended Audience :: Information Technology",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Telecommunications Industry",
    "License :: OSI Approved :: BSD License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Information Analysis",
]
dependencies = [
    "catboost>=1.0.3",
    "fastparquet>=0.8.1",
    "ipywidgets>=8.1.0",
    "lightgbm>=3.3.2",
    "numpy>=1.19.0",
    "pandas>=1.1.0,<3.0.0",
    "pydantic>=1.8.2,<2.0.0",
    "pyjwt>=2.8.0",
    "python-dateutil>=2.8.0",
    "python-json-logger>=2.0.2",
    "requests>=2.8.0",
    "scikit-learn>=1.3.0",
    "xhtml2pdf==0.2.11",
]

[project.urls]
"Bug Reports" = "https://github.com/upgini/upgini/issues"
Homepage = "https://upgini.com/"
Source = "https://github.com/upgini/upgini"

[tool.hatch.version]
path = "src/upgini/__about__.py"

[tool.hatch.build.targets.sdist]
include = [
    "src"
]

[tool.hatch.build.targets.wheel]
packages = [
    "src/upgini"
]

[tool.hatch.envs.default]
type = "virtual"
python = "3.10"

[tool.hatch.envs.test]
dependencies = [
  "coverage[toml]",
  "pytest",
  "pytest-cov",
  "requests-mock",
]

[tool.hatch.envs.test.scripts]
cov = 'pytest --cov-report=term-missing --cov-config=pyproject.toml --cov=upgini --cov=tests {args}'
format = "black {args}"
lint = "ruff check {args}"

test_binary = 'pytest -s -vv tests/test_binary_dataset.py'

[[tool.hatch.envs.test.matrix]]
python = ["3.8", "3.9", "3.10"]

[tool.black]
line-length = 120

[tool.isort]
profile = "black"

[tool.pytest.ini_options]
pythonpath = [
  "./src"
]